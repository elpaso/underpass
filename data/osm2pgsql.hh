//
// Copyright (c) 2020, 2021 Humanitarian OpenStreetMap Team
//
// This file is part of Underpass.
//
//     Underpass is free software: you can redistribute it and/or modify
//     it under the terms of the GNU General Public License as published by
//     the Free Software Foundation, either version 3 of the License, or
//     (at your option) any later version.
//
//     Underpass is distributed in the hope that it will be useful,
//     but WITHOUT ANY WARRANTY; without even the implied warranty of
//     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//     GNU General Public License for more details.
//
//     You should have received a copy of the GNU General Public License
//     along with Underpass.  If not, see <https://www.gnu.org/licenses/>.
//

#ifndef __OSM2PGSQL_HH__
#define __OSM2PGSQL_HH__

// This is generated by autoconf
#ifdef HAVE_CONFIG_H
#include "unconfig.h"
#endif

#include "boost/date_time/posix_time/posix_time.hpp"
#include "pq.hh"
#include <boost/date_time.hpp>
using namespace boost::posix_time;
using namespace boost::gregorian;

/// \file osm2pgsql.hh
/// \brief Manages a osm2pgsql DB

/// \namespace osm2pgsql
namespace osm2pgsql {

class Osm2Pgsql : public pq::Pq
{
  public:
    static const std::string OSM2PGSQL_DEFAULT_SCHEMA_NAME;

    Osm2Pgsql() = default;
    Osm2Pgsql(const std::string &dburl,
              const std::string &schema = OSM2PGSQL_DEFAULT_SCHEMA_NAME);

    ptime getLastUpdate();

    ///
    /// \brief updateDatabase updates the DB with osm changes.
    /// \param osm_changes input data (decompressed) from an OSC file.
    /// \return TRUE on success, errors are logged.
    ///
    bool updateDatabase(const std::string &osm_changes);

    bool connect(const std::string &dburl);

  private:
    bool getLastUpdateFromDb();

    ptime last_update = not_a_date_time;
    std::string dburl;
    std::string schema = OSM2PGSQL_DEFAULT_SCHEMA_NAME;
};

} // namespace osm2pgsql

#endif
