//
// Copyright (c) 2020, 2021 Humanitarian OpenStreetMap Team
//
// This file is part of Underpass.
//
//     Underpass is free software: you can redistribute it and/or modify
//     it under the terms of the GNU General Public License as published by
//     the Free Software Foundation, either version 3 of the License, or
//     (at your option) any later version.
//
//     Underpass is distributed in the hope that it will be useful,
//     but WITHOUT ANY WARRANTY; without even the implied warranty of
//     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//     GNU General Public License for more details.
//
//     You should have received a copy of the GNU General Public License
//     along with Underpass.  If not, see <https://www.gnu.org/licenses/>.
//

#ifndef __IMPORT_HH__
#define __IMPORT_HH__

// This is generated by autoconf
#ifdef HAVE_CONFIG_H
# include "unconfig.h"
#endif

#include <string>
#include <vector>
#include <array>
#include <memory>
#include <iostream>
#include <pqxx/pqxx>

#include <osmium/io/any_input.hpp>
#include <osmium/builder/osm_object_builder.hpp>
#include <osmium/handler.hpp>
#include <osmium/visitor.hpp>
#include <osmium/io/any_output.hpp>
#include <glibmm/convert.h>

#include <boost/date_time.hpp>
#include "boost/date_time/posix_time/posix_time.hpp"
using namespace boost::posix_time;
using namespace boost::gregorian;

#include "data/pgsnapshot.hh"

/// \file import.hh
/// \brief Import an OSM data file into postgres
///
/// This uses osmium to read an OSM data file into postgres,
/// currently supporting only the pgsnapshot schema, as it
/// can be updated by replication files.

/// \namespace import
namespace import {

/// \class OSMHandler
/// \brief Osmium object handler
///
/// This class contains the callbacks used by osmium when
/// parsing an OSM data file.
class OSMHandler : public osmium::handler::Handler {
public:
    /// Process a way
    void way(const osmium::Way& way);

    /// Process a standalone node
    void node(const osmium::Node& node);

    /// Process a relation
    void relation(const osmium::Relation& rel);

    bool addUser(long uid, const std::string &user);
    
    /// Connect to the database
    bool connect(const std::string &dbname, const std::string &server);

private:
    pqxx::connection *db;       ///< PQXX database connection handle
    pqxx::work *worker;         ///< PQXX database worker handle
    // cache the nodes in between ways
    std::map<long, osmium::Location> cache; ///< Cache of nodes used for a way
};

/// \class ImportOSM
/// \brief Derived class for Osmium
///
/// This class uses Osmium to reads in an OSM data file and insert
/// it into a postgres database.
class ImportOSM
{
public:
    /// Import a raw OSM file using libosmium
    ImportOSM(const std::string &file, const std::string &db);

    // ~ImportOSM(void) { reader.close(); };
private:
    std::string database;       ///< The name of the database
    std::string server;         ///< The database server hostname
    OSMHandler handler;         ///< Handler for Osmium
};


} // EOF import namespace

#endif  // EOF __IMPORT_HH__
