//
// Copyright (c) 2020, Humanitarian OpenStreetMap Team
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// * Redistributions of source code must retain the above copyright notice, this
//   list of conditions and the following disclaimer.
//
// * Redistributions in binary form must reproduce the above copyright notice,
//   this list of conditions and the following disclaimer in the documentation
//   and/or other materials provided with the distribution.
//
// * Neither the name of copyright holder nor the names of its
//   contributors may be used to endorse or promote products derived from
//   this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
// OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

#ifndef __OSMCHANGE_HH__
#define __COSMHANGEF_HH__

// This is generated by autoconf
#ifdef HAVE_CONFIG_H
# include "hotconfig.h"
#endif

#include <string>
#include <vector>
#include <array>
#include <memory>
#include <iostream>
#include <pqxx/pqxx>
#include <libxml++/libxml++.h>

#include <boost/date_time.hpp>
#include "boost/date_time/posix_time/posix_time.hpp"
using namespace boost::posix_time;
using namespace boost::gregorian;

#define BOOST_BIND_GLOBAL_PLACEHOLDERS 1

#include "hotosm.hh"

namespace osmchange {

/// This class manages an OSM change file, the details of which
/// are handled by libosmium.
class OsmChange : public osmium::handler::Handler
{
public:
    OsmChange(void) { };
    OsmChange(const std::string &osc, bool memory) { readChanges(osc, memory); };

    // ~ChangeFile(void) override;
    // Constructor. New data will be added to the given buffer.
    explicit OsmChange(osmium::memory::Buffer& buffer);

    /// Read a changeset file from disk or memory into internal storage
    bool readChanges(const std::string &osc, bool memory);
    
    /// The node handler is called for each node in the input data.
    void node(const osmium::Node& node);

    /// The way handler is called for each way in the input data.
    void way(const osmium::Way& way);

    /// The relation handler is called for each relation in the input data.
    void relation(const osmium::Relation& relation);

private:
};
    
}       // EOF osmchange

#endif  // EOF __OSMCHANGE_HH__
